{"version":3,"file":"static/js/701.0a9c122b.chunk.js","mappings":"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","sources":["common/components/swiperBox.js","test/transformTest.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport {useEffect} from \"react\";\r\n\r\n/*\r\n* props: showNum,children,width,height,butClassName,showScroll\r\n* 注意：子元素一定要设置宽度和高度\r\n* */\r\nexport default function SwiperBox(props){\r\n    const {showNum,children,width,height,butClassName,showScroll} = props;\r\n    const childrenSize = children.length; //获取子元素的个数\r\n    // display:none;可以隐藏元素 display:block;是div的默认属性\r\n    const [hidden,setHidden] = useState([]) // 只保存none和block\r\n    // const boxWidth = width-12;\r\n    // console.log(boxWidth)\r\n\r\n    useEffect(()=>{\r\n        // 初始化hidden\r\n        let hide = []\r\n        for (let i = 0 ; i<childrenSize ; i++){\r\n            if (i<showNum){\r\n                hide.push('block');\r\n            }else {\r\n                hide.push('none');\r\n            }\r\n        }\r\n        setHidden(hide);\r\n        // widthHandle('100rpx');\r\n    },[])\r\n\r\n    function up() {\r\n        // console.log('上')\r\n        let hide = hidden;\r\n        if (hide[0]!=='block'){\r\n            for (let i = 0 ; i<hide.length ; i++){\r\n                if (hide[i]==='block'){\r\n                    hide[i-1]='block';\r\n                    hide[i+showNum-1]='none';\r\n                    break;\r\n                }\r\n            }\r\n            setHidden([...hide]);\r\n            // console.log(hide)\r\n        }\r\n    }\r\n    function next(){\r\n        // console.log('下')\r\n        let hide = hidden;\r\n        if (hide[hide.length-1]!=='block'){\r\n            for (let i = 0 ; i<hide.length ; i++){\r\n                if (hide[i]==='block'){\r\n                    hide[i]='none';\r\n                    hide[i+showNum] = 'block';\r\n                    break;\r\n                }\r\n            }\r\n            setHidden([...hide]);\r\n            // console.log(hide)\r\n        }\r\n    }\r\n    function scroll(e) {\r\n        // console.log(e.target)\r\n        let scrollSize = e.target.scrollTop;\r\n        let scroollBottom = children[0].props.style.height*showNum-e.target.clientHeight;\r\n\r\n        if (scrollSize===0){\r\n            console.log('up');\r\n            console.log(scrollSize,scroollBottom)\r\n            // up()\r\n            antiShake(up(),500);\r\n        }else if (scroollBottom-1===scrollSize||scroollBottom+1===scrollSize){\r\n            console.log('next')\r\n            console.log(scrollSize,scroollBottom)\r\n            // next()\r\n            antiShake(next(),500);\r\n        }\r\n    }\r\n    function widthHandle(width){\r\n        let j = 0; // 首个字符出现的索引\r\n        let newWidth = 0; // 记录新的宽度\r\n        // console.log(width.length)\r\n        for (let i = 0 ;i< width.length; i++){\r\n            if (width.charCodeAt(i)>=48&&width.charCodeAt(i)<=57){\r\n            }else {\r\n               j++;\r\n            }\r\n        }\r\n        if (showScroll!=true){\r\n            return width;\r\n        }\r\n        // 显示部分滑动条\r\n        newWidth = Number(width.slice(0,width.length-j))-12;\r\n        let temp = width.slice(width.length-j,width.length); //px\r\n        return  newWidth+temp;\r\n    }\r\n    function hightHandle() {\r\n        // console.log(children[0].props.style.height);\r\n        if (showScroll!=true){\r\n            return children[0].props.style.height*showNum;;\r\n        }\r\n        // 有滑动条时children[0].props.style.height*showNum - children[0].props.style.height/2 + 'px';\r\n        return children[0].props.style.height*showNum - children[0].props.style.height/2 + 'px';;\r\n    }\r\n    // Anti shake 防抖\r\n    function antiShake(func,waitTime) {\r\n        let myTime = null;\r\n        return function () {\r\n            if (myTime !== null){\r\n                clearTimeout(myTime);\r\n            }\r\n            myTime = setTimeout(func,waitTime);\r\n        }\r\n    }\r\n    return(\r\n        <div style={{width:`${widthHandle(width)}`,overflow:\"hidden\"}}>\r\n            <div style={{width:`${width}`,height:`${height}`,margin:0,padding:0\r\n            }}>\r\n                <button onClick={up}\r\n                        className={butClassName}\r\n                        style={{\r\n                            width:`${showScroll!=true?'100%':'80%'}`,\r\n                            backgroundColor:'white',\r\n                        }}>\r\n                    <svg t=\"1665756106912\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\"\r\n                         width=\"100%\" height=\"30\">\r\n                        <path\r\n                            d=\"M966.4 668.8l-435.2-432c-9.6-9.6-25.6-9.6-35.2 0l-441.6 432c-9.6 9.6-9.6 25.6 0 35.2 9.6 9.6 25.6 9.6 35.2 0l425.6-416 416 416c9.6 9.6 25.6 9.6 35.2 0S976 678.4 966.4 668.8z\"\r\n                            p-id=\"2522\" fill=\"#707070\"></path>\r\n                    </svg>\r\n                </button>\r\n                <div className={'scroll'}\r\n                     style={{overflowY:`${showScroll!=true?'visible':'scroll'}`,height:`${hightHandle()}`,\r\n                         padding:5}}\r\n                     onScroll={scroll}>\r\n                    {\r\n                        hidden.map((item,index)=>(\r\n                            <div key={index} style={{display:`${hidden[index]}`}} >\r\n                                {children[index]}\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <button onClick={next}\r\n                        className={butClassName}\r\n                        style={{\r\n                            width:`${showScroll!=true?'100%':'80%'}`,\r\n                            backgroundColor:'white',\r\n                        }}>\r\n                    <svg t=\"1665756214730\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\"\r\n                         width=\"100%\" height=\"30\">\r\n                        <path\r\n                            d=\"M966.4 323.2c-9.6-9.6-25.6-9.6-35.2 0l-416 416-425.6-416c-9.6-9.6-25.6-9.6-35.2 0-9.6 9.6-9.6 25.6 0 35.2l441.6 432c9.6 9.6 25.6 9.6 35.2 0l435.2-432C976 345.6 976 332.8 966.4 323.2z\"\r\n                            p-id=\"2770\" fill=\"#707070\"></path>\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import './test.css'\r\nimport SwiperBox from \"../common/components/swiperBox\";\r\nimport {Link, Outlet} from \"react-router-dom\";\r\nexport default function TransformTest(props){\r\n    return(\r\n        <div>\r\n            <SwiperBox showNum={4} width={'100px'} hight={'120px'} butClassName={'a'}\r\n\r\n            >\r\n                <div style={{border:'1px solid red',height:50,boxSizing:'border-box'}}>1</div>\r\n                <div style={{border:'1px solid red',height:50,boxSizing:'border-box'}}>2</div>\r\n                <div style={{border:'1px solid red',height:50,boxSizing:'border-box'}}>3</div>\r\n                <div style={{border:'1px solid red',height:50,boxSizing:'border-box'}}>4</div>\r\n                <div style={{border:'1px solid red',height:50,boxSizing:'border-box'}}>5</div>\r\n                <div style={{border:'1px solid red',height:50,boxSizing:'border-box'}}>6</div>\r\n                <div style={{border:'1px solid red',height:50,boxSizing:'border-box'}}>7</div>\r\n                <div style={{border:'1px solid red',height:50,boxSizing:'border-box'}}>8</div>\r\n                <div style={{border:'1px solid red',height:50,boxSizing:'border-box'}}>9</div>\r\n            </SwiperBox>\r\n            <Link to={'abc'} state={'abcdef'}>abc</Link>\r\n            <Outlet/>\r\n        </div>\r\n\r\n    )\r\n    // const {showSize} = props;\r\n    // const [hidden,setHidden] = useState(['block','block','block','none','none','none','none','none'])\r\n    // const [index,setIndex] = useState(0);\r\n    //\r\n    // function up() {\r\n    //     let hide = hidden;\r\n    //     for (let i = 0 ; i<hide.length ; i++){\r\n    //         if (i===index){\r\n    //             hide[i-1] = 'block';\r\n    //             for (let j = i+1 ; j<=i-showSize ; j--){\r\n    //                 hide[j] = 'none';\r\n    //             }\r\n    //             break;\r\n    //         }\r\n    //     }\r\n    //     if (index-1!==-1){\r\n    //         setIndex(index-1);\r\n    //     }\r\n    //     setHidden([...hide]);\r\n    // }\r\n    // function next(){\r\n    //     let hide = hidden;\r\n    //     for (let i = 0 ; i<hide.length ; i++){\r\n    //         if (i === index){\r\n    //             hide[i] = 'none'\r\n    //             for (let j = i+1 ; j<=i+showSize ; j++){\r\n    //                 hide[j] = 'block'\r\n    //             }\r\n    //             break;\r\n    //         }\r\n    //     }\r\n    //     if (index+1<hide.length-showSize){\r\n    //         setIndex(index+1);\r\n    //         console.log(index,hide.length);\r\n    //     }\r\n    //     setHidden([...hide]);\r\n    // }\r\n    //\r\n    // return(\r\n    //     <div style={{\r\n    //         width:200,\r\n    //         height:400,\r\n    //         backgroundColor:'beige',\r\n    //         position:'fixed'\r\n    //     }}>\r\n    //         <button onClick={up}>上</button>\r\n    //         <div\r\n    //             style={{\r\n    //             width:200,\r\n    //             height:303,\r\n    //             overflow:'hidden',\r\n    //         }}>\r\n    //             <div\r\n    //                  style={{width:150,height:100,margin:3,border:'1px solid red',display:`${hidden[0]}`}}>1</div>\r\n    //             <div\r\n    //                  style={{width:150,height:100,margin:3,border:'1px solid red',display:`${hidden[1]}`}}>2</div>\r\n    //             <div\r\n    //                  style={{width:150,height:100,margin:3,border:'1px solid red',display:`${hidden[2]}`}}>3</div>\r\n    //             <div\r\n    //                  style={{width:150,height:100,margin:3,border:'1px solid red',display:`${hidden[3]}`}}>4</div>\r\n    //             <div\r\n    //                  style={{width:150,height:100,margin:3,border:'1px solid red',display:`${hidden[4]}`}}>5</div>\r\n    //             <div\r\n    //                  style={{width:150,height:100,margin:3,border:'1px solid red',display:`${hidden[5]}`}}>6</div>\r\n    //             <div\r\n    //                  style={{width:150,height:100,margin:3,border:'1px solid red',display:`${hidden[6]}`}}>7</div>\r\n    //             <div\r\n    //                  style={{width:150,height:100,margin:3,border:'1px solid red',display:`${hidden[7]}`}}>8</div>\r\n    //         </div>\r\n    //         <button onClick={next}>下</button>\r\n    //     </div>\r\n    //)\r\n}"],"names":["SwiperBox","props","showNum","children","width","height","butClassName","showScroll","childrenSize","length","useState","hidden","setHidden","up","hide","i","next","antiShake","func","waitTime","myTime","clearTimeout","setTimeout","useEffect","push","style","j","charCodeAt","Number","slice","widthHandle","overflow","margin","padding","onClick","className","backgroundColor","t","viewBox","version","d","fill","overflowY","onScroll","e","scrollSize","target","scrollTop","scroollBottom","clientHeight","console","log","map","item","index","display","TransformTest","hight","border","boxSizing","to","state"],"sourceRoot":""}