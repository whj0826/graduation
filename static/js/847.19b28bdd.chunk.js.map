{"version":3,"file":"static/js/847.19b28bdd.chunk.js","mappings":"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","sources":["common/components/center.js","module/shoppingCart/shoppingCart.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css'\r\nexport default function Center({children}){\r\n    return(\r\n        <div style={{\r\n            width:'100%',\r\n            height:'100%',\r\n            display:'flex',\r\n            flexDirection:'column',\r\n            justifyContent:'center',\r\n            textAlign:'center'\r\n        }}>\r\n            <div\r\n                style={{\r\n                    width:'100%',\r\n                    display:'flex',\r\n                    flexDirection:'row',\r\n                    justifyContent:'center',\r\n                    textAlign:'center'\r\n                }}\r\n            >{children}</div>\r\n        </div>\r\n    )\r\n}","import {Fragment, useEffect, useRef, useState} from \"react\";\r\nimport {Button, Checkbox, Grid, Stack, Divider, Container, Box} from \"@mui/material\";\r\nimport {motion} from \"framer-motion\"\r\nimport Center from \"../../common/components/center\";\r\nimport './shoppingCart.css';\r\n\r\n/*\r\n数据格式：\r\n    [{\r\n        id:'',\r\n        image:'',\r\n        name:'',\r\n        number:'',\r\n        price:'',\r\n        selected:'', //选中1 or true，不选中 0 or false\r\n    }]\r\n<576px\txs\r\n≥576px\tsm\r\n≥768px\tmd\r\n≥992px\tlg\r\n≥1200px\txl\r\n≥1400px xxl\r\n* */\r\n\r\n/*\r\nReact.createElement(\r\n  type,\r\n  [props],\r\n  [...children]\r\n)\r\n* */\r\n\r\nlet data = [\r\n    {\r\n        id: '001',\r\n        image: 'http://localhost:9090/',\r\n        name: '散文001',\r\n        maxNumber: 12,\r\n        price: '130.00',\r\n        select: false\r\n    },\r\n    {\r\n        id: '002',\r\n        image: 'http://localhost:9090/',\r\n        name: '散文002',\r\n        maxNumber: 5,\r\n        price: '120.00',\r\n        select: false\r\n    }, {\r\n        id: '003',\r\n        image: 'http://localhost:9090/',\r\n        name: '散文003',\r\n        maxNumber: 6,\r\n        price: '110.00',\r\n        select: false\r\n    }\r\n]\r\n\r\nexport default function ShoppingCart() {\r\n    // const [count, setCount] = useState(1);\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n    // 表头中的每个格子所占的大小数组 [复选框,商品信息,单价,数量,金额,操作]\r\n    const [headGridSize, setHeadGridSize] = useState([]);\r\n    const [headContent, setHeadContent] = useState([]);\r\n    const [items, setItems] = useState(data);\r\n\r\n    let initBuyOperation = [];\r\n    for (let i = 0; i < items.length; i++) {\r\n        // 物品id，购物数量，物品可以购买的最大数量，是否购买\r\n        initBuyOperation.push({id: items[i].id, number: 1, maxNumber: items[i].maxNumber, isBuy: false})\r\n    }\r\n    // 记录用户的购买操作信息\r\n    const [buyOperation, setBuyOperation] = useState(initBuyOperation);\r\n\r\n    useEffect(() => {\r\n        reportWindowSize();\r\n    }, [])\r\n\r\n    /*\r\n        表头\r\n        当宽度小于768时，改变每个格子所占的大小 改变为[1,4,3,4] 对应的标题为[全选,商品信息,全额,数量] 通过滑动商品进行删除操作\r\n        当宽度小于576时........................[2,5,5].............[全选,图片2+内容3,金额]\r\n        表内容\r\n        改变为[1,1,2,4,4] 对应的标题为[全选,图片,内容,全额,数量] 通过滑动商品进行删除操作\r\n    * */\r\n    // 每个商品中的每个格子所占的大小数组 [复选框,图片,内容,单价,数量,金额,操作]\r\n    const [itemGridSize, setItemGridSize] = useState([1, 1, 2, 1, 2, 2, 2, 2]);\r\n\r\n    // https://developer.mozilla.org/en-US/docs/web/api/window/resize_event\r\n    // 动态获取当前屏幕的宽度\r\n    function reportWindowSize() {\r\n        setWidth(window.innerWidth);\r\n        if (width <= 768 && width >= 576) {\r\n            setHeadGridSize([1, 4, 3, 4]);\r\n            setHeadContent([\"商品信息\", \"金额\", \"数量\"]);\r\n        } else if (width <= 576) {\r\n            setHeadGridSize([2, 5, 5]);\r\n            setHeadContent([\"商品信息\", \"金额\"]);\r\n        } else {\r\n            setHeadGridSize([1, 3, 2, 2, 2, 2, 2])\r\n            setHeadContent([\"商品信息\", \"单价\", \"数量\", \"金额\", \"操作\"]);\r\n        }\r\n        console.log('改变-' + width);\r\n    }\r\n\r\n    window.onresize = reportWindowSize;\r\n\r\n    function del(id) {\r\n        console.log(id)\r\n    }\r\n    function restore(id) {\r\n        console.log(id)\r\n    }\r\n\r\n    function checkHandle(event) {\r\n        console.log(event.target.checked, event.target.value)\r\n    }\r\n\r\n    function Count(props) {\r\n        console.log('count')\r\n        const {index} = props;\r\n        // 计数处理，防止用户误操作\r\n        const countHandle = (operation) => {\r\n            let count = buyOperation[index];\r\n            const max = count.maxNumber;  // 最大值\r\n            let buyNum = count.number;  //购买的数量\r\n            if (operation === 'add') {  // 加1\r\n                if (max == buyNum) {  // 当数量加到最大值时，就无法加法运算\r\n                    alert('该商品的数量有限');\r\n                } else {  // 没有加到最大值时，可以加一\r\n                    buyNum = buyNum + 1;\r\n                }\r\n            } else {  // 减1\r\n                if (buyNum <= 1) { // 不允许数量减到0\r\n                    buyNum = 1;\r\n                } else {  // 没有减到0时，可以继续减一\r\n                    buyNum = buyNum - 1;\r\n                }\r\n            }\r\n            count.number = buyNum;\r\n            buyOperation[index] = count;\r\n            setBuyOperation([...buyOperation]);\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <Stack direction={\"row\"} sx={{display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\r\n                    <div>\r\n                        {/* 减法 */}\r\n                        <button onClick={() => countHandle('sub')}\r\n                                className={\"sc-count-but\"}>-\r\n                        </button>\r\n                        <input value={buyOperation[index].number} className={\"sc-count-input\"}/>\r\n                        {/* 加法 */}\r\n                        <button onClick={() => countHandle('add')}\r\n                                className={\"sc-count-but\"}>+\r\n                        </button>\r\n                    </div>\r\n                </Stack>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    function Head() {\r\n        console.log('head')\r\n        return (\r\n            <Fragment>\r\n                <Grid container>\r\n                    {/* 选择框 */}\r\n                    <Grid item xs={headGridSize[0]}>\r\n                        <Center>\r\n                            <Checkbox value={'all'} color=\"success\" onChange={checkHandle}/>\r\n                            {width > 576 && <Center>全选</Center>}\r\n                        </Center>\r\n                    </Grid>\r\n                    {\r\n                        headContent.map((item, index) => (\r\n                            headGridSize.length > index + 1 &&\r\n                            <Grid item xs={headGridSize[index + 1]} key={index}>\r\n                                <Center>{item}</Center>\r\n                            </Grid>\r\n                        ))\r\n                    }\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    function DynamicItem(props) {\r\n        console.log('DynamicItem')\r\n        const {index} = props;\r\n        let item = items[index]; //根据索引获取一个物品的信息\r\n        // 选择框\r\n        const checkbox = <Checkbox color=\"success\" value={item.id} onChange={checkHandle}/>;\r\n        // 图片\r\n        const img = <img src={item.image} alt={\"error\"} width={'115%'} height={92}/>;\r\n        // 商品名字\r\n        const name = <div style={{padding: 10}}>{item.name}</div>;\r\n        // 单价\r\n        const price = <div>{item.price}</div>;\r\n        // 计数\r\n        const count = <Count index={index}/>;\r\n        // 删除按钮\r\n        const delBut = <Button className={\"sc-del-but\"} variant={\"outlined\"}\r\n                               onClick={() => del(item.id)}>删除</Button>;\r\n        // 价格 + 计数组件\r\n        const total = <Stack direction={\"column\"}>{price}{count}</Stack>\r\n        // 小于768px且大于576px\r\n        const sm = [1, 2, 2, 3, 4];\r\n        const smList = [checkbox, img, name, price, count];\r\n        // 小于576px\r\n        const xs = [2, 2, 3, 5];\r\n        const xsList = [checkbox, img, name, total];\r\n        // 大于768px\r\n        const mg = [1, 1, 2, 2, 2, 2, 2];\r\n        const mgList = [checkbox, img, name, price, count, price, delBut];\r\n        if (width <= 768 && width >= 576) {\r\n            return (\r\n                <Fragment>\r\n                    {sm.map((item, index) => (\r\n                        <Grid item xs={item} key={index}>\r\n                            <Center>\r\n                                {smList[index]}\r\n                            </Center>\r\n                        </Grid>\r\n                    ))}\r\n                </Fragment>\r\n            )\r\n        } else if (width <= 576) {\r\n            return (\r\n                <Fragment>\r\n                    {xs.map((item, index) => (\r\n                        <Grid item xs={item} key={index}>\r\n                            <Center>\r\n                                {xsList[index]}\r\n                            </Center>\r\n                        </Grid>\r\n                    ))}\r\n                </Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    {mg.map((item, index) => (\r\n                        <Grid item xs={item} key={index}>\r\n                            <Center>\r\n                                {mgList[index]}\r\n                            </Center>\r\n                        </Grid>\r\n                    ))}\r\n                </Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    function Item(props) {\r\n        console.log('item')\r\n        const {index} = props;\r\n        return (\r\n            <Fragment>\r\n                <div style={{zIndex: 100, backgroundColor: 'white', padding: 5}}>\r\n                    <div>\r\n                        <Divider textAlign=\"left\">商店名称</Divider>\r\n                    </div>\r\n                    <Box>\r\n                        <Grid container>\r\n                            <DynamicItem index={index}/>\r\n                        </Grid>\r\n                    </Box>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    function DragItem(props) {\r\n        console.log('DragItem')\r\n        const {index} = props;\r\n        const [hidden,setHidden] = useState(-1);\r\n        return (\r\n            <>\r\n                <motion.div\r\n                    drag={\"x\"}\r\n                    dragConstraints={{\r\n                        left: -100,\r\n                        right: 0\r\n                    }}\r\n                    onDragEnd={(event,info)=>{console.log(event,info);\r\n                        if (hidden===1){\r\n                            setHidden(-1);\r\n                        }else {\r\n                            setHidden(1)\r\n                        }\r\n                    }}\r\n                >\r\n                    <Item index={index}/>\r\n                </motion.div>\r\n                <div className={\"sc-hidden\"} style={{zIndex:`${hidden}`}}>\r\n                    <Stack direction={'column'}>\r\n                        {/*<div className={'sc-hidden-but sc-hidden-but-restore'} onClick={()=> console.log(items[index].id)}>复原</div>*/}\r\n                        <div className={'sc-hidden-but sc-hidden-but-del'} onClick={()=> console.log(items[index].id)}>删除</div>\r\n                    </Stack>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <Stack direction={\"column\"} spacing={2}>\r\n                    <div>\r\n                        <Head/>\r\n                    </div>\r\n                    {items.map((item, index) => (\r\n                        <div key={index} >\r\n                            <DragItem index={index}/>\r\n                        </div>\r\n                    ))}\r\n                </Stack>\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}"],"names":["Center","children","style","width","height","display","flexDirection","justifyContent","textAlign","data","id","image","name","maxNumber","price","select","ShoppingCart","useState","window","innerWidth","setWidth","headGridSize","setHeadGridSize","headContent","setHeadContent","items","initBuyOperation","i","length","push","number","isBuy","buyOperation","setBuyOperation","useEffect","reportWindowSize","console","log","checkHandle","event","target","checked","value","Count","props","index","countHandle","operation","count","max","buyNum","alert","Fragment","Stack","direction","sx","onClick","className","Head","Grid","container","item","xs","Checkbox","color","onChange","map","DynamicItem","checkbox","img","src","alt","padding","delBut","Button","variant","total","smList","xsList","mgList","Item","zIndex","backgroundColor","Divider","Box","DragItem","hidden","setHidden","motion","drag","dragConstraints","left","right","onDragEnd","info","onresize","Container","spacing"],"sourceRoot":""}